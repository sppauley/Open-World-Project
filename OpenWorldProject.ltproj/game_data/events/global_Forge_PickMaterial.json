[
    {
        "name": "Forge_PickMaterial",
        "trigger": null,
        "level_nid": null,
        "condition": "True",
        "commands": [],
        "only_once": false,
        "priority": 20,
        "_source": [
            "# gives a default version of the item to the blacksmith for comparison",
            "level_var;ChoosingMaterial;1",
            "textbox;MaterialDetails;\"{eval:str('Simon' if '{v:ForgeUnit_choice_hover}'=='??' else '{v:ForgeUnit_choice_hover}')+'|CON '+str(u('{v:ForgeUnit_choice_hover}').stats['CON'])+' MAG '+str(u('{v:ForgeUnit_choice_hover}').stats['MAG'])+ '|' + str(' ' if '{v:ForgeItem_choice_hover}'=='??' or {v:ChoosingUnit}==1 else [item.name for item in u('{v:ForgeUnit}').items if str(item.uid) == '{v:ForgeItem_choice_hover}'][0]+'|'+str('Cannot forge' if not item_system.is_weapon(u('{v:ForgeUnit_choice_hover}'),[item for item in u('{v:ForgeUnit_choice_hover}').items if str(item.uid) == '{v:ForgeItem_choice_hover}'][0]) else 'Requires '+str([component.value for component in [item for item in u('{v:ForgeUnit_choice_hover}').items if str(item.uid) == '{v:ForgeItem_choice_hover}'][0].components if component.nid == 'stat_req'][0][0][1]) + ' '+ str([component.value for component in [item for item in u('{v:ForgeUnit_choice_hover}').items if str(item.uid) == '{v:ForgeItem_choice_hover}'][0].components if component.nid == 'stat_req'][0][0][0])+'|'+str(' ' if {v:ChoosingMaterial}==0 or '{v:ForgeType_choice_hover}'=='??' else '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.add_text}' if '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.add_text}' else '{v:ForgeType_choice_hover}'.split(' ')[0]+': '+str([component.value for component in [item for item in u('{v:ForgeUnit_choice_hover}').items if str(item.uid) == '{v:ForgeItem_choice_hover}'][0].components if '{v:ForgeType_choice_hover}' != '??' and component.nid == '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.component_name}'][0])+'+'+str('{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.amount}')))) + '|' + '{eval:('Cost: ' + str([component.value for component in [item for item in game.get_unit('{v:ForgeUnit}').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.component_name}'][0]//{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.amount} + 1 - [component.value for component in [item for item in game.get_unit('Blacksmith').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.component_name}'][0]//{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.amount}) if '{d:ForgingTable.{eval:'{v:ForgeType_choice_hover}'.split(' ')[0]}.amount}' != '' else '0')}'}\";92,7;100;6;;;;text-white;menu_bg_dark;expression",
            "",
            "level_var;ForgeNID;game.item_registry[int(v(\"ForgeItem\"))].nid",
            "give_item;Blacksmith;{v:ForgeNID};no_banner",
            "",
            "if;item_system.is_weapon(game.get_unit('{v:ForgeUnit}'),[item for item in game.get_unit('{v:ForgeUnit}').items if item.nid == '{v:ForgeNID}'][0])",
            "    choice;ForgeType;Material;{eval:','.join([str(var).replace('WeaponMaterial','')+' '+str(game.game_vars[var]) for var in game.game_vars if 'WeaponMaterial' in str(var)])};70;v;top_right;menu_bg_base;;;11,1;left;8,-4;backable",
            "    if;'{v:ForgeType}'!='BACK'",
            "        rmtable;MaterialDetails",
            "        trigger_script_with_args;Forge_Calculate;ForgeType,{v:ForgeType}",
            "    else",
            "        sound;Select 5",
            "        remove_item;Blacksmith;{v:ForgeNID};no_banner",
            "        rmtable;MaterialDetails",
            "        trigger_script_with_args;Forge_PickItem;ForgeUnit,{v:ForgeUnit}",
            "        unchoice",
            "        end",
            "else",
            "    sound;Error",
            "    remove_item;Blacksmith;{v:ForgeNID};no_banner",
            "    alert;Not Weapon",
            "    rmtable;MaterialDetails",
            "    trigger_script_with_args;Forge_PickItem;ForgeUnit,{v:ForgeUnit}",
            "    unchoice",
            "end"
        ]
    }
]