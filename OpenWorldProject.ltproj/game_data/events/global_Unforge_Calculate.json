[
    {
        "name": "Unforge_Calculate",
        "trigger": null,
        "level_nid": null,
        "condition": "True",
        "commands": [],
        "only_once": false,
        "priority": 20,
        "_source": [
            "level_var;ForgeNID;game.item_registry[int(v(\"ForgeItem\"))].nid",
            "give_item;Blacksmith;{v:ForgeNID};no_banner",
            "",
            "# saves all changes in components to a list",
            "level_var;ForgeChanges;[]",
            "",
            "# iterates through the possible forging materials and checks to see whether the component changed",
            "for;VAR;[str(var) for var in game.game_vars if 'WeaponMaterial' in str(var)]",
            "    alert;{VAR}",
            "    # checks to see if the component changed",
            "    level_var;ForgeComponent;'{d:ForgingTable.{eval:'{VAR}'.replace('WeaponMaterial','')}.component_name}'",
            "    # determines whether this is a one-time addition component",
            "    if;'{d:ForgingTable.{eval:'{VAR}'.replace('WeaponMaterial','')}.amount}'",
            "        level_var;ForgeAmount;{d:ForgingTable.{eval:'{VAR}'.replace('WeaponMaterial','')}.amount}",
            "        level_var;ForgeChange;[component.value for component in [item for item in game.get_unit('{v:ForgeUnit}').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{v:ForgeComponent}'][0] - [component.value for component in [item for item in game.get_unit('Blacksmith').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{v:ForgeComponent}'][0]",
            "        ",
            "    else",
            "        level_var;ForgeChange;'{v:ForgeComponent}' in [component.nid for component in [item for item in game.get_unit('{v:ForgeUnit}').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{v:ForgeComponent}'] and '{v:ForgeComponent}' not in [component.nid for component in [item for item in game.get_unit('Blacksmith').items if item.nid == '{v:ForgeNID}'][0].components if component.nid == '{v:ForgeComponent}']",
            "    end",
            "    # adds the components too the changes list if they're not 0 or false",
            "    if;{v:ForgeChange} != 0 and {v:ForgeChange} != False",
            "        level_var;ForgeChanges;{v:ForgeChanges} + [['{v:ForgeComponent}', {v:ForgeChange}]]",
            "    end",
            "endf",
            "",
            "# if there are changes, ask if player wants to proceed",
            "if;len({v:ForgeChanges}) > 0",
            "    choice;Unforge_Proceed;Pay 150 to refund forge components?;Yes,No;backable",
            "    if;'{v:Unforge_Proceed}' == 'Yes'",
            "        trigger_script;Unforge_End",
            "    else",
            "        sound;Select 5",
            "        rmtable;ItemDetails",
            "        remove_item;Blacksmith;{v:ForgeNID};no_banner",
            "        trigger_script;Unforge_PickItem",
            "    end",
            "else",
            "    sound;Error",
            "    alert;Item has not been forged",
            "    rmtable;ItemDetails",
            "    remove_item;Blacksmith;{v:ForgeNID};no_banner",
            "    trigger_script;Unforge_PickItem",
            "end"
        ]
    }
]